{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","setState","removeGood","filter","item","resetGoods","changeChoice","some","titleInfo","text","length","this","className","join","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6GaC,E,4MArGbC,MAAQ,CACNC,aAAc,I,EAGhBC,QAAU,SAACC,GACT,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,aAAH,MAAuB,CACnCA,aAAa,GAAD,mBAAMA,GAAN,CAAoBE,S,EAIpCE,WAAa,SAACF,GACZ,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,aAAH,MAAuB,CACnCA,aAAa,YAAKA,EAAaK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,W,EAI3DK,WAAa,WACX,EAAKJ,SAAS,CACZH,aAAc,M,EAIlBQ,aAAe,SAACN,GACV,EAAKH,MAAMC,aAAaS,MAAK,SAAAH,GAAI,OAAIA,IAASJ,KAChD,EAAKE,WAAWF,GAEhB,EAAKD,QAAQC,I,EAIjBQ,UAAY,SAACV,GACX,IAAIW,EAAO,GAcX,OAZIX,EAAaY,OAAS,IACxBD,EAAO,wBAGmB,IAAxBX,EAAaY,SACfD,EAAO,iBAGLX,EAAaY,OAAS,IACxBD,EAAO,iBAGFA,G,4CAGT,WAAU,IAAD,OACCX,EAAiBa,KAAKd,MAAtBC,aAER,OACE,sBAAKc,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,YAAd,UACE,gDACCd,EAAae,KAAK,MAClBF,KAAKH,UAAUV,MAElB,wBACEgB,KAAK,SACLF,UAAWd,EAAaY,OAAS,EAC7B,yBACA,iBACJK,QAAS,WACP,EAAKV,cANT,sBAYF,yBAASO,UAAU,YAAnB,SACE,qBAAKA,UAAU,aAAf,SACGjB,EAAgBqB,KAAI,SAAAhB,GAAI,OACvB,qBAEEY,UAAS,oBAAed,EAAaS,MAAK,SAAAH,GAAI,OAAIA,IAASJ,KACvD,mBACA,aAJN,UAME,4BAAIA,IACJ,wBACEc,KAAK,SACLF,UAAU,8BACVG,QAAS,WACP,EAAKT,aAAaN,IAJtB,SAOGF,EAAaS,MAAK,SAAAH,GAAI,OAAIA,IAASJ,KAChC,SACA,UAfDA,iB,GA5EHiB,IAAMC,WCjBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9c5a5a8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState(({ selectedGood }) => ({\n      selectedGood: [...selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState(({ selectedGood }) => ({\n      selectedGood: [...selectedGood.filter(item => item !== good)],\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  changeChoice = (good: string) => {\n    if (this.state.selectedGood.some(item => item === good)) {\n      this.removeGood(good);\n    } else {\n      this.addGood(good);\n    }\n  };\n\n  titleInfo = (selectedGood: string[]) => {\n    let text = '';\n\n    if (selectedGood.length < 1) {\n      text = 'No goods selected...';\n    }\n\n    if (selectedGood.length === 1) {\n      text = ' is selected.';\n    }\n\n    if (selectedGood.length > 1) {\n      text = ' are selected';\n    }\n\n    return text;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__title\">\n          <h1 className=\"App__text\">\n            <b>Selected good: </b>\n            {selectedGood.join(', ')}\n            {this.titleInfo(selectedGood)}\n          </h1>\n          <button\n            type=\"button\"\n            className={selectedGood.length < 1\n              ? 'App__button--reset-off'\n              : 'btn btn-danger'}\n            onClick={() => {\n              this.resetGoods();\n            }}\n          >\n            reset\n          </button>\n        </div>\n        <section className=\"App__list\">\n          <div className=\"App__cards\">\n            {goodsFromServer.map(good => (\n              <li\n                key={good}\n                className={`App__card ${selectedGood.some(item => item === good)\n                  ? 'App__card-select'\n                  : 'App__card'}`}\n              >\n                <p>{good}</p>\n                <button\n                  type=\"button\"\n                  className=\"App__button btn btn-primary\"\n                  onClick={() => {\n                    this.changeChoice(good);\n                  }}\n                >\n                  {selectedGood.some(item => item === good)\n                    ? 'remove'\n                    : 'add'}\n                </button>\n              </li>\n            ))}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}